#: kivy 1.8

#: import lisepathl LiSE.__path__
#: import solarized LiSE.gui.style.solarized
#: import _ LiSE.util.passthru
#: import sep os.sep
<TimelineView>:
    RelativeLayout:
        Timeline:
            id: timeline
            charsheet: root.charsheet
            keys: root.keys
            field: root.field
        TimelineCursor:
            size_hint: (0, 0)
            orientation: 'vertical' if timeline.orientation[0] in 'lr' else 'horizontal'
            x: root.charsheet.facade.observed.closet.tick * ((timeline.max_tick - timeline.min_tick) / timeline.width) if self.orientation == 'vertical' else 0
            y: root.charsheet.facade.observed.closet.tick * ((timeline.max_tick - timeline.min_tick) / timeline.height) if self.orientation == 'horizontal' else 0
<Arrow>:
    canvas:
        Color:
            rgba: root.bg_color
        Line:
            width: root.w * 1.4
            points: root.points
        Color:
            rgba: root.fg_color
        Line:
            width: root.w
            points: root.points
<ClosetLabel>:
    font_name: sep.join([lisepathl[-1], 'gui', 'assets', 'Entypo.ttf']) if self.symbolic else 'DroidSans'
    font_size: 30 if self.symbolic else 16
    text: self.closet.get_text(self.stringname) if self.closet and self.stringname else ''
<ClosetHintTextInput>:
    hint_text: self.closet.get_text(self.stringname) if self.closet and self.stringname else ''
<Sizer>:
    symbolic: True
    stringname: _('@resize-ud')
<TabbedPanel>:
    do_default_tab: False
<CueCard>:
    Label:
        id: l
        text_size: root.size
        color: solarized["base0"]
        pos: root.pos
        size: root.size
        halign: 'center'
        valign: 'middle'
        canvas.before:
            Color:
                rgba: solarized["base02"]
            Rectangle:
                pos: l.pos
                size: l.size
<LoadImgDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
        BoxLayout:
            size_hint_y: None
            height: 30
            ClosetButton:
                closet: root.closet
                stringname: _("Cancel")
                on_release: root.cancel()
            ClosetButton:
                closet: root.closet
                stringname: _("Load")
                on_release: root.load(filechooser.path, filechooser.selection)
<ConfirmOrCancel>:
    size_hint_y: None
    height: 30
    Button:
        text: _("Cancel")
        on_release: root.cancel()
    Button:
        text: _("Confirm")
        on_release: root.confirm()
<TogSwatch,FrobSwatch>:
    size_hint: (None, None)
    Image:
        texture: root.img.texture
        size_hint: (None, None)
        size: root.img.size
        center: root.center
<TableHeader>:
    height: 30
<TableBody>:
    height: 20
<CharStatTableView>:
    CharStatTableContent:
        closet: root.character.closet
<GamePiece>:
    imgs: list(self.closet.iter_graphic_imgs(self.graphic_name)) if self.closet and self.graphic_name else []
    offset_x: self.graphic_bone.offset_x if self.graphic_bone else 0
    offset_y: self.graphic_bone.offset_y if self.graphic_bone else 0
<LiSELayout>:
    #: import stiffscroll kivy.garden.stiffscroll.StiffScrollEffect
    menu: menu
    charsheet: charsheet
    board: board
    BoardView:
        id: board_view
        board: board
        effect_cls: stiffscroll
        Board:
            id: board
            facade: root.app.closet.get_facade(root.app.observer_name, root.app.observed_name)
            host: root.app.closet.get_character(root.app.host_name)
    CueCard:
        id: prompt
        closet: root.app.closet
        pos_hint: {'x': 0.1, 'top': 1}
        size_hint: (None, None)
        size: (400, 26)
    CharSheetView:
        id: charsheet
        closet: root.app.closet
        observed: root.app.observed_name
        observer: root.app.observer_name
        pos_hint: {'x': 0.7, 'y': 0.0}
        size_hint: (0.3, 1.0)
    BoxLayout:
        id: menu
        size_hint: (0.1, 1)
        orientation: 'vertical'
        spacing: 10
        ClosetButton:
            closet: root.app.closet
            stringname: _("Place...")
            fun: root.show_spot_menu
        ClosetButton:
            closet: root.app.closet
            stringname: _("Portal...")
            fun: root.make_arrow
        ClosetButton:
            closet: root.app.closet
            stringname: _("Thing...")
            fun: root.show_pawn_menu
        ClosetButton:
            closet: root.app.closet
            symbolic: True
            stringname: _("@starttime")
            fun: root.normal_speed
        ClosetButton:
            closet: root.app.closet
            symbolic: True
            stringname: _("@reversetime")
            fun: root.normal_speed
            arg: False
        ClosetButton:
            closet: root.app.closet
            symbolic: True
            stringname: _("@pause")
            fun: root.pause
        CueCard:
            closet: root.app.closet
            stringname: _("Branch:")
        MenuBranchInput:
            closet: root.app.closet
            stringname: '@branch'
            fun: root.go_to_branch
        CueCard:
            closet: root.app.closet
            stringname: _("Tick:")
        MenuTickInput:
            closet: root.app.closet
            stringname: '@tick'
            fun: root.go_to_tick
<SpotMenuContent>:
    id: spotmenu
    TextInput:
        id: namer
        hint_text: root.get_text(_("Enter a unique name"))
        size_hint: (1, None)
        multiline: False
        height: self.line_height * 2
    TogSwatch:
        id: default_tog_swatch
        box: spotmenu
        img: root.closet.get_img("default_spot")
        text: root.get_text(_("Use default image"))
        group: "spotmenu"
        size_hint_y: None
    TogSwatch:
        id: pixel_city_tog_swatch
        box: spotmenu
        img: root.closet.get_img("crossroad")
        tags: ['?pixel_city']
        text: root.get_text(_("Build with PixelCity"))
        group: "spotmenu"
        size_hint_y: None
    BoxLayout:
        size_hint_y: None
        height: 30
        Button:
            id: cancel_button
            text: root.get_text(_('Cancel'))
            on_release: root.cancel()
        Button:
            id: confirm_button
            text: root.get_text(_('Confirm'))
            on_release: root.confirm()
<Pawn>:
    bone: self.get_bone()
<PawnMenuContent>:
    id: pawnmenu
    TextInput:
        id: namer
        hint_text: root.get_text(_("Enter a unique name"))
        size_hint: (1, None)
        multiline: False
        height: self.line_height * 2
    TogSwatch:
        box: pawnmenu
        img: root.closet.get_img("default_pawn")
        text: root.get_text(_("Use default image"))
        group: "pawnmenu"
        size_hint_y: None
    TogSwatch:
        box: pawnmenu
        img: root.closet.get_img("base.mummy_m")
        tags: ["base", "body", "boot", "hand1", "hand2", "hair", "head", "leg", "beard", "cloak"]
        text: root.get_text(_("Build with RLTiles"))
        group: "pawnmenu"
        size_hint_y: None
    BoxLayout:
        size_hint_y: None
        height: 30
        Button:
            text: root.get_text(_('Cancel'))
            on_release: root.cancel()
        Button:
            text: root.get_text(_('Confirm'))
            on_release: root.confirm()